# The directory Mix will write compiled artifacts to.
/_build/

# If you run "mix test --cover", coverage assets end up here.
/cover/

# The directory Mix downloads your dependencies sources to.
/deps/

# Where 3rd-party dependencies like ExDoc output generated docs.
/doc/

# Ignore .fetch files in case you like to edit your project deps locally.
/.fetch

# If the VM crashes, it generates a dump, let's ignore it too.
erl_crash.dump

# Also ignore archive artifacts (built via "mix archive.build").
*.ez

# Temporary files, for example, from tests.
/tmp/

# Ignore package tarball (built via "mix hex.build").
chat-*.tar

# Ignore assets that are produced by build tools.
/priv/static/assets/

# Ignore digested assets cache.
/priv/static/cache_manifest.json

# In case you use Node.js/npm, you want to ignore these.
npm-debug.log
/assets/node_modules/

/priv/static/
/priv/cert/
/installer/_build/
/installer/tmp/
/installer/doc/
/installer/deps/

# Ignore generated js bundle
/priv/static/assets/app.js
/priv/static/assets/app.css

# Database files
*.db
*.sqlite
*.sqlite3

# Secret files
.env
.env.*
!.env.example
*.secret.exs
/config/*.secret.exs

# Elixir Language Server
/.elixir_ls/

# React/JavaScript specific
# dependencies
/assets/node_modules
/frontend/node_modules
/client/node_modules

# testing
/assets/coverage
/frontend/coverage
/client/coverage

# production
/assets/build
/frontend/build
/client/build
/dist
/out

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

# IDE specific files
.idea/
.vscode/
*.swp
*.swo
*~
.elixir_ls/
*.sublime-workspace
*.sublime-project

# Logs
/log/
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Cache directories
.npm
.eslintcache
.sass-cache/